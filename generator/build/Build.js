// Generated by CoffeeScript 1.7.1
(function() {
  var addProcess, checkDeletedFiles, checkNewFiles, childProcess, fileSystem, getFiles, inFileList, inProcessList, init, processList, startWatching;

  fileSystem = require("fs");

  childProcess = require("child_process");

  processList = [];

  init = (function(_this) {
    return function() {
      var file, _i, _len, _ref;
      addProcess("../", "Start.coffee");
      _ref = getFiles();
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        file = _ref[_i];
        addProcess("../src", file);
      }
      return startWatching();
    };
  })(this);

  startWatching = (function(_this) {
    return function() {
      return setInterval(function() {
        checkNewFiles();
        return checkDeletedFiles();
      }, 500);
    };
  })(this);

  addProcess = (function(_this) {
    return function(output, file) {
      var command, process;
      command = "coffee -b -o " + output + " -wc ../coffee/" + file;
      process = childProcess.exec(command);
      return processList.push({
        command: command,
        output: output,
        file: file,
        process: process
      });
    };
  })(this);

  getFiles = (function(_this) {
    return function() {
      var a, file, files, parts, type, _i, _len;
      a = [];
      files = fileSystem.readdirSync("../coffee");
      for (_i = 0, _len = files.length; _i < _len; _i++) {
        file = files[_i];
        if (file === "Start.coffee") {
          continue;
        }
        parts = file.split(".");
        type = parts[parts.length - 1];
        if (type !== "coffee") {
          continue;
        }
        a.push(file);
      }
      return a;
    };
  })(this);

  checkNewFiles = (function(_this) {
    return function() {
      var file, _i, _len, _ref, _results;
      _ref = getFiles();
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        file = _ref[_i];
        if (file === "Start.coffee") {
          continue;
        }
        if (!inProcessList(file)) {
          _results.push(addProcess("../src", file));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };
  })(this);

  checkDeletedFiles = (function(_this) {
    return function() {
      var index, item, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = processList.length; _i < _len; _i++) {
        item = processList[_i];
        if (item.file === "Start.coffee") {
          continue;
        }
        if (!inFileList(item)) {
          item.process.kill();
          index = processList.indexOf(item);
          processList.splice(index, 1);
          break;
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };
  })(this);

  inFileList = (function(_this) {
    return function(item) {
      var file, _i, _len, _ref;
      _ref = getFiles();
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        file = _ref[_i];
        if (file === item.file) {
          return true;
        }
      }
    };
  })(this);

  inProcessList = (function(_this) {
    return function(file) {
      var item, _i, _len;
      for (_i = 0, _len = processList.length; _i < _len; _i++) {
        item = processList[_i];
        if (item.file === file) {
          return true;
        }
      }
    };
  })(this);

  init();

}).call(this);
