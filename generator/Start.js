// Generated by CoffeeScript 1.7.1
var Equity, Logger, compile, debug, log, logger, main,
    __bind = function(fn, me)
    {
        return function()
        {
            return fn.apply(me, arguments);
        };
    };

debug = false;

Equity = {};

Logger = (function(){
    function Logger()
    {
        this.log = __bind(this.log, this);
        var parent, path, time;
        parent = new File($.fileName).parent;
        time = new Date().toString();
        path = "" + parent.path + "/exports/logs/" + time + ".log";
        this.file = new File(path);
        this.file.open("w");
    }

    Logger.prototype.log = function()
    {
        var arg, _i, _len, _results;
        _results = [];
        for (_i = 0, _len = arguments.length; _i < _len; _i++)
        {
            arg = arguments[_i];
            if (debug)
            {
                $.writeln(arg);
            }
            _results.push(this.file.writeln(arg));
        }
        return _results;
    };

    return Logger;

})();

logger = new Logger();

log = logger.log;

compile = (function(_this)
{
    return function()
    {
        var file, files, folder, parent, _i, _len, _results;
        parent = new File($.fileName).parent;
        folder = new Folder("" + parent + "/src");
        files = folder.getFiles("*.js");
        eval("#include " + parent + "/lib/json2/json2.js");
        eval("#include " + parent + "/lib/hex2rgb/hex2rgb.js");
        eval("#include " + parent + "/lib/encoder/Encoder.js");
        _results = [];
        for (_i = 0, _len = files.length; _i < _len; _i++)
        {
            file = files[_i];
            _results.push(eval("#include " + parent + "/src/" + file.name));
        }
        return _results;
    };
})(this);

compile();

main = new Equity.Main();

main.init();
